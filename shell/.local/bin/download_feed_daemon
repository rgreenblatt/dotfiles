#!/usr/bin/env python3

import os
import argparse
import time

import youtube_dl
import notify2


def download_feed(url, path, name, restrict_filenames, n_days):
    print(path)
    os.makedirs(path, exist_ok=True)
    archive_file_name = 'download_archive.txt'
    opts = {
        'download_archive': os.path.join(path, archive_file_name),
        'outtmpl': os.path.join(path, r'%(upload_date)s_%(title)s.%(ext)s'),
        'restrictfilenames': restrict_filenames,
        'daterange': youtube_dl.DateRange(start='now-{}day'.format(n_days)),
    }

    def get_files():
        return set(p for p in os.listdir(path) if p != archive_file_name)

    with youtube_dl.YoutubeDL(opts) as ydl:
        last_files = get_files()
        notify2.init('feed downloader {}'.format(name))
        while True:
            try:
                ydl.download([url])
                new_files = get_files()
                diff = new_files - last_files

                if diff:
                    n = notify2.Notification(
                        "New downloads for {}".format(name), '\n'.join(diff),
                        '')
                    n.show()
                    print("New:")
                    print(diff)
                last_files = new_files
                time.sleep(5 * 60)
            except Exception as e:
                print("Exception:", e)


if __name__ == "__main__":
    parser = argparse.ArgumentParser(
        description='download rss feed and provide content notifications')
    parser.add_argument('url', type=str, help='rss feed url')
    parser.add_argument('--path',
                        type=str,
                        help='path to save files',
                        default=os.getcwd())
    parser.add_argument('--name',
                        type=str,
                        help='name to display in notifications',
                        default='')
    parser.add_argument('--n-days',
                        type=int,
                        help='only download files in the last n days',
                        default=7)
    parser.add_argument('--no-restrict-filenames',
                        action='store_true',
                        help="don't strip outspaces and emoji etc")

    args = parser.parse_args()
    download_feed(args.url, args.path, args.name,
                  not args.no_restrict_filenames, args.n_days)
